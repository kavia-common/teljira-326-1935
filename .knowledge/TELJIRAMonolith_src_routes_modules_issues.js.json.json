{"is_source_file": true, "format": "JavaScript", "description": "This file defines Express.js routes for managing issues in a project management system. It includes endpoints for creating, retrieving, and updating issues, and interacts with a database, socket.io, and middleware for authentication, authorization, and auditing.", "external_files": ["../../middleware/auth", "../../middleware/rbac", "../../db", "../../middleware/audit", "../../socket"], "external_methods": ["authenticate", "requirePermissions", "getDb", "auditLog", "getIo"], "published": ["router"], "classes": [], "methods": [{"name": "router.post", "description": "Handles creation of a new issue, including database insertion, auditing, and emitting socket events."}, {"name": "router.get", "description": "Retrieves list of issues, optionally filtered by project or sprint."}, {"name": "router.patch", "description": "Updates existing issue fields, logs the update, and emits socket events."}], "calls": ["getDb().query", "auditLog", "getIo().to(...).emit(...)"], "search-terms": ["issues route", "issue creation endpoint", "issue retrieval", "issue update", "issue database queries", "Express.js issues route"], "state": 2, "file_id": 31, "knowledge_revision": 62, "git_revision": "", "ctags": [{"_type": "tag", "name": "express", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/src/routes/modules/issues.js", "pattern": "/^const express = require('express');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/src/routes/modules/issues.js", "pattern": "/^const router = express.Router();$/", "language": "JavaScript", "kind": "constant"}], "hash": "0aceb9070bb513c2b859addba4f87182", "format-version": 4, "code-base-name": "TELJIRAMonolith", "filename": "TELJIRAMonolith/src/routes/modules/issues.js", "revision_history": [{"62": ""}]}