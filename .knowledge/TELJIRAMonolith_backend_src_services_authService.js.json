{"is_source_file": true, "format": "JavaScript", "description": "This file defines authentication-related services, including user registration, login with optional MFA verification, and enabling MFA for users. It interacts with User database model and external libraries for hashing, token generation, and MFA verification.", "external_files": ["../models/User", "../setup/errors"], "external_methods": ["User.query().findOne", "User.query().insertAndFetch", "User.query().patchAndFetchById", "argon2.hash", "argon2.verify", "jwt.sign", "totp.verify", "process.env.JWT_SECRET", "process.env.JWT_EXPIRES_IN"], "published": ["register", "login", "enableMfa"], "classes": [], "methods": [{"name": "register({ email, name, password })", "description": "Registers a new user with email, name, and password. Checks for existing email, hashes password, and saves new user.", "scope": "", "scopeKind": ""}, {"name": "login({ email, password, mfaToken })", "description": "Authenticates user by email and password, verifies MFA token if enabled, and returns a JWT along with user info.", "scope": "", "scopeKind": ""}, {"name": "enableMfa(userId, { secret })", "description": "Enables MFA on a user account using provided TOTP secret.", "scope": "", "scopeKind": ""}], "calls": ["User.query().findOne", "User.query().insertAndFetch", "User.query().patchAndFetchById", "argon2.hash", "argon2.verify", "jwt.sign", "totp.verify"], "search-terms": ["authService", "user registration", "MFA enable", "JWT", "argon2", "totp", "User model"], "state": 2, "file_id": 37, "knowledge_revision": 76, "git_revision": "", "ctags": [{"_type": "tag", "name": "argon2", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^const argon2 = require('argon2');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "enableMfa", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^async function enableMfa(userId, { secret }) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, { secret })"}, {"_type": "tag", "name": "jwt", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^const jwt = require('jsonwebtoken');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^async function login({ email, password, mfaToken }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ email, password, mfaToken })"}, {"_type": "tag", "name": "options", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^    totp.options = { window: 1 };$/", "language": "JavaScript", "kind": "class", "scope": "totp", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^async function register({ email, name, password }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ email, name, password })"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^module.exports = { register, login, enableMfa };$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "window", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/authService.js", "pattern": "/^    totp.options = { window: 1 };$/", "language": "JavaScript", "kind": "property", "scope": "totp.options", "scopeKind": "class"}], "hash": "89b78adff54c7d46d48f7ed969615c31", "format-version": 4, "code-base-name": "TELJIRAMonolith", "filename": "TELJIRAMonolith/backend/src/services/authService.js", "fields": [{"name": "module.exports = { register, login, enableMfa };", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "totp.options = { window: 1 };", "scope": "totp.options", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"76": ""}]}