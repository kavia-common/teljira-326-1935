{"is_source_file": true, "format": "JavaScript", "description": "This file initializes and configures an Express.js web application, setting up middleware for security, logging, CORS, body parsing, rate limiting, CSRF protection, and routing for API and health endpoints.", "external_files": ["./routes", "../swagger", "./middleware/requestContext", "./middleware/errorHandlers", "./routes/health"], "external_methods": ["require", "app.use", "app.set", "app.get", "app.listen", "swaggerUi.setup"], "published": ["app"], "classes": [], "methods": [], "calls": ["require('cors')", "require('express')", "require('compression')", "require('cookie-parser')", "require('helmet')", "require('morgan')", "require('express-rate-limit')", "require('csurf')", "require('dotenv').config()", "require('./routes')", "require('swagger-ui-express')", "require('../swagger')", "require('./middleware/requestContext')", "require('./middleware/errorHandlers')", "require('./routes/health')", "express()", "app.use()", "helmet()", "compression()", "morgan()", "cors()", "app.set()", "express.json()", "express.urlencoded()", "cookieParser()", "rateLimit()", "app.use('/api', apiLimiter)", "requestContext", "swaggerUi.serve", "swaggerUi.setup()", "csrf()", "app.use()", "notFoundHandler", "errorHandler", "module.exports = app"], "search-terms": ["Express.js server setup", "CORS configuration", "CSRF protection", "Swagger UI setup", "Rate limiting middleware", "Health route", "Error handling"], "state": 2, "file_id": 4, "knowledge_revision": 146, "git_revision": "60170788cf27921249ff28f12b094884389481b0", "revision_history": [{"22": "70897e0d47d7ae128673166ec3f53d5999928ced"}, {"96": "70897e0d47d7ae128673166ec3f53d5999928ced"}, {"146": "60170788cf27921249ff28f12b094884389481b0"}], "ctags": [], "filename": "TELJIRAMonolith/src/app.js", "hash": "8f6f36590e59c3dee1883969a8d99f53", "format-version": 4, "code-base-name": "https://github.com/kavia-common/teljira-326-1935.git:kavia-main"}