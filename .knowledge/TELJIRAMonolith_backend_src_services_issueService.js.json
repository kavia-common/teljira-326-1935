{"is_source_file": true, "format": "JavaScript", "description": "This file defines service functions for managing issues within a project management system. It includes functions for retrieving backlog issues, creating new issues, updating issues, and transitioning issue statuses. It also interacts with models, emits events, and publishes webhooks related to issues.", "external_files": ["../models/Issue", "../models/Project", "../setup/errors", "../plugins", "./webhookService"], "external_methods": ["Issue.query()", "Project.query()", "HttpError()", "emit()", "webhook.publish()"], "published": ["backlog", "create", "update", "transition"], "classes": [], "methods": [{"name": "backlog(projectId)", "description": "Returns non-archived issues without a sprint (backlog) for a specific project.", "scope": "", "scopeKind": ""}, {"name": "create(projectId, data)", "description": "Creates a new issue within a project, generating a unique key based on the project key and current issue count.", "scope": "", "scopeKind": ""}, {"name": "update(issueId, patch)", "description": "Updates fields of an existing issue identified by issueId.", "scope": "", "scopeKind": ""}, {"name": "transition(issueId, status)", "description": "Transitions an issue to a new status after validating the status value.", "scope": "", "scopeKind": ""}], "calls": ["Issue.query()", "Project.query().findById()", "Issue.query().count()", "Issue.query().insertAndFetch()", "Issue.query().patchAndFetchById()", "emit()", "webhook.publish()"], "search-terms": ["issueService", "create", "update", "transition", "backlog", "issue", "project", "webhook"], "state": 2, "file_id": 39, "knowledge_revision": 142, "git_revision": "", "revision_history": [{"80": ""}, {"142": ""}], "ctags": [{"_type": "tag", "name": "backlog", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^async function backlog(projectId) {$/", "language": "JavaScript", "kind": "function", "signature": "(projectId)"}, {"_type": "tag", "name": "backlog", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^module.exports = { backlog, create, update, transition };$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^async function create(projectId, data) {$/", "language": "JavaScript", "kind": "function", "signature": "(projectId, data)"}, {"_type": "tag", "name": "transition", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^async function transition(issueId, status) {$/", "language": "JavaScript", "kind": "function", "signature": "(issueId, status)"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^async function update(issueId, patch) {$/", "language": "JavaScript", "kind": "function", "signature": "(issueId, patch)"}, {"_type": "tag", "name": "webhook", "path": "/home/kavia/workspace/code-generation/teljira-326-1935/TELJIRAMonolith/backend/src/services/issueService.js", "pattern": "/^const webhook = require('.\\/webhookService');$/", "language": "JavaScript", "kind": "constant"}], "hash": "2a33087c72d481b32e3e2f6e2216c874", "format-version": 4, "code-base-name": "TELJIRAMonolith", "filename": "TELJIRAMonolith/backend/src/services/issueService.js", "fields": [{"name": "module.exports = { backlog, create, update, transition };", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}]}